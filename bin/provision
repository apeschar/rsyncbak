#!/usr/bin/env bash

set -euo pipefail
cd "$(dirname "$0")/.."

my_host="$(hostname -f)"
privkey="$HOME/.ssh/id_ed25519"
pubkey="$privkey.pub"
conf="etc/rsync_backup"

if [[ $# -ne 1 ]]; then
	echo "Usage: $0 <uid>" >&2
	exit 1
fi

uid="$1"

parent_uid="${uid%s*}"
if [[ $parent_uid = $uid ]]; then
	echo "UID should match pattern *s*" >&2
	exit 1
fi

remote="$uid@$parent_uid.rsync.net"
ssh="ssh -o StrictHostKeyChecking=no -o ControlPath=/tmp/ssh-%C -o ControlMaster=auto -o ControlPersist=60 $remote"

if [[ -f $conf ]]; then
	echo "Configuration exists already?" >&2
	exit 1
fi

if [[ ! -f $pubkey ]]; then
	ssh-keygen -q -N '' -t ed25519 -f "$privkey"
fi

parent_remote="$parent_uid@$parent_uid.rsync.net"
cat >&2 <<EOF
Install SSH key with:

if [[ \$(ssh $parent_remote cat $uid/.ssh/authorized_keys) = '' ]]; then
	ssh $parent_remote dd of=$uid/.ssh/authorized_keys <<<"$(cat $pubkey)"
else
	echo 'Another key already exists?'
	ssh $parent_remote cat $uid/.ssh/authorized_keys
fi

Press ENTER to continue...
EOF

read -s

if other_host="$($ssh "cat host" 2>/dev/null)" && [[ $other_host != $my_host ]]; then
	echo "Existing host file for $other_host found; aborting." >&2
	exit 1
fi

$ssh "mkdir -p .ssh"
$ssh "dd of=host status=none" <<<"$my_host"
$ssh "chmod 440 host" <<<"$my_host"

echo "dest=$remote:" >"$conf"

echo "ok" >&2
