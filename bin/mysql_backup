#!/usr/bin/env bash

set -euo pipefail
app="$(dirname "$0")/.."

source "$app/etc/rsync_backup.defaults"
source "$app/etc/rsync_backup"

if ! command -v zstd &>/dev/null; then
	echo "Please install zstd" >&2
	exit 1
fi

fail=0

remote="${dest%%:*}"
dir="${dest#*:}"
if [[ $dir != "" ]]; then
	dir="$dir/"
fi

ssh_tmp="$(mktemp -d)"
ssh_socket="$ssh_tmp/conn"

_ssh() {
	ssh \
		-o ConnectTimeout=10 \
		-o ConnectionAttempts=5 \
		-o ControlMaster=auto \
		-o ControlPath="$ssh_socket" \
		-o BatchMode=yes \
		-o StrictHostKeyChecking=no \
		"$@"
}

cleanup() {
	pkill -f "$ssh_socket" &>/dev/null || true
	fuser -k "$ssh_socket" &>/dev/null || true
	rm -f "$ssh_socket" || true
	rmdir "$ssh_tmp" || true
}
trap cleanup EXIT

tries=3
while ! _ssh -f -N "$remote"; do
	if [[ $((--tries)) -le 0 ]]; then
		exit 1
	fi
	sleep 60
done

IFS=$'\n' dbs=($(mysql -Ne 'SHOW DATABASES'))

zstd_options=()
if [[ -t 2 ]]; then
	zstd_options+=( -v )
fi

_ssh "$remote" "$(printf 'mkdir -p %q' "${dir}mysql")"

for db in "${dbs[@]}"; do
	[[ $db = "performance_schema" ]] && continue
	[[ $db = "information_schema" ]] && continue
	path="${dir}mysql/${db}.sql.zstd"
	tmp="${path}.$$.tmp"
	if [[ -t 2 ]]; then
		echo "$db" >&2
	fi
	if mysqldump --single-transaction --routines --events --no-autocommit "$db" |
	   zstd --adapt "${zstd_options[@]}" |
	   _ssh "$remote" "$(printf 'dd of=%q status=none' "$tmp")"
	then
		if _ssh "$remote" "$(printf 'mv %q %q' "$tmp" "$path")"; then
			continue
		fi
	fi
	_ssh "$remote" "$(printf 'rm -f %q' "$tmp")" || true
	fail=1
done

if [[ $fail -eq 0 ]]; then
	_ssh "$remote" "$(printf 'touch %q' "${dir}mysql.ok")" || fail=1
	_ssh "$remote" "$(printf 'find %q -maxdepth 1 -type f -name "*.tmp" -mmin +1440 -delete' "${dir}mysql")" || fail=1
fi

if [[ $fail -eq 1 ]]; then
	exit 1
fi
