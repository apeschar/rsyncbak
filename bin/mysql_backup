#!/bin/bash

set -euo pipefail
app="$(dirname "$0")/.."

source "$app/etc/rsync_backup.defaults"
source "$app/etc/rsync_backup"

if [[ -t 1 ]] && command -v pv &>/dev/null; then
    _pv() { pv "$@"; }
else
    _pv() { cat; }
fi

fail=0

remote="${dest%%:*}"
dir="${dest#*:}"
if [[ $dir != "" ]]; then
    dir="$dir/"
fi

IFS=$'\n' dbs=($(mysql -e 'show databases' --skip-column-names))

ssh_tmp="$(mktemp -d)"
ssh_socket="$ssh_tmp/conn"

_ssh() {
    ssh \
        -o ConnectTimeout=10 \
        -o ConnectionAttempts=5 \
        -o ControlMaster=auto \
        -o ControlPath="$ssh_socket" \
        -o BatchMode=yes \
        "$@"
}

cleanup() {
    fuser -k "$ssh_socket" &>/dev/null || true
    rm -f "$ssh_socket" || true
    rmdir "$ssh_tmp" || true
}
trap cleanup EXIT

tries=3
while ! _ssh -f -N "$remote"; do
    if [[ $((--tries)) -le 0 ]]; then
        exit 1
    fi
    sleep 60
done

_ssh "$remote" "$(printf 'mkdir -p %q' "${dir}mysql")"

for db in "${dbs[@]}"; do
    [[ $db = "performance_schema" ]] && continue
    [[ $db = "information_schema" ]] && continue
    path="${dir}mysql/${db}.sql.gz"
    tmp="${dir}mysql/${db}.sql.gz.$$.tmp"
    if mysqldump --single-transaction --routines --events "$db" |
         _pv -N "$db" | gzip | _ssh "$remote" "$(printf 'dd of=%q status=none' "$tmp")"; then
        if _ssh "$remote" "$(printf 'mv %q %q' "$tmp" "$path")"; then
            continue
        fi
    fi
    _ssh "$remote" "$(printf 'rm -f %q' "$tmp")" || true
    fail=1
done

if [[ $fail -eq 0 ]]; then
    _ssh "$remote" "$(printf 'touch %q' "${dir}mysql.ok")" || fail=1
fi

if [[ $fail -eq 1 ]]; then
    exit 1
fi
